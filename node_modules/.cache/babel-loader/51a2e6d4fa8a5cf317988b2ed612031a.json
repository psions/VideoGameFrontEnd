{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction useFetch(url) {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    axios.get(url).then(response => {\n      setData(response.data);\n    }).catch(err => {\n      setError(err);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [url]);\n\n  const refetch = () => {\n    setLoading(true);\n    axios.get(url).then(response => {\n      setData(response.data);\n    }).catch(err => {\n      setError(err);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  return {\n    data,\n    loading,\n    error,\n    refetch\n  };\n}\n\n_s(useFetch, \"v5inua6mCP5CN8A+E7ULWpnNGvM=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/Tl1/Desktop/devcodecamp/video-games/src/components/useFetch.jsx"],"names":["useEffect","useState","axios","useFetch","url","data","setData","loading","setLoading","error","setError","get","then","response","catch","err","finally","refetch"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAN,IAAAA,KAAK,CACAS,GADL,CACSP,GADT,EAEKQ,IAFL,CAEWC,QAAD,IAAY;AACdP,MAAAA,OAAO,CAACO,QAAQ,CAACR,IAAV,CAAP;AACP,KAJD,EAKKS,KALL,CAKYC,GAAD,IAAQ;AACXL,MAAAA,QAAQ,CAACK,GAAD,CAAR;AACP,KAPD,EAOGC,OAPH,CAOW,MAAK;AACRR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACP,KATD;AAUH,GAZQ,EAYP,CAACJ,GAAD,CAZO,CAAT;;AAcA,QAAMa,OAAO,GAAG,MAAM;AAClBT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAN,IAAAA,KAAK,CACAS,GADL,CACSP,GADT,EAEKQ,IAFL,CAEWC,QAAD,IAAY;AACdP,MAAAA,OAAO,CAACO,QAAQ,CAACR,IAAV,CAAP;AACP,KAJD,EAKKS,KALL,CAKYC,GAAD,IAAQ;AACXL,MAAAA,QAAQ,CAACK,GAAD,CAAR;AACP,KAPD,EAOGC,OAPH,CAOW,MAAK;AACRR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACP,KATD;AAUH,GAZD;;AAaA,SAAM;AAACH,IAAAA,IAAD;AAAOE,IAAAA,OAAP;AAAgBE,IAAAA,KAAhB;AAAuBQ,IAAAA;AAAvB,GAAN;AACH;;GAjCQd,Q;;AAmCT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction useFetch(url) {\r\n    const [data, setData] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    \r\n    useEffect(() =>{\r\n        setLoading(true);\r\n        axios\r\n            .get(url)\r\n            .then((response)=>{\r\n                setData(response.data);\r\n        })\r\n            .catch((err) =>{\r\n                setError(err)\r\n        }).finally(() =>{\r\n                setLoading(false);\r\n        });\r\n    },[url]);\r\n\r\n    const refetch = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get(url)\r\n            .then((response)=>{\r\n                setData(response.data);\r\n        })\r\n            .catch((err) =>{\r\n                setError(err)\r\n        }).finally(() =>{\r\n                setLoading(false);\r\n        });\r\n    }\r\n    return{data, loading, error, refetch};\r\n}\r\n\r\nexport default useFetch"]},"metadata":{},"sourceType":"module"}